- name: Disable Default NodeJS
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable NodeJS 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install NodeJS
  ansible.builtin.dnf:
    name: nodejs
    state: installed

# - name: Creating expense user
#   ansible.builtin.user:
#     name: expense

# - name: Create app Directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download Backend Core
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

- name: Import Common Roles
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

# - name: UnZip
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip #bydefault checks in ansible server
#     dest: /app
#     remote_src: yes

- name: Install NPM Dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy Backend Service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install Python MySQL Dependencies
  ansible.builtin.pip:
    name:
    - PyMySQL # to connect MySQL DB from Ansible
    - cryptography
    executable: pip3.9
    
- name: Install MySQL client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: Ensure transactions database exists
  community.mysql.mysql_db:
    name: all
    state: present
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}"


- name: Import Data in MySQL
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    state: import
    name: all

- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: start and enable backend service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes