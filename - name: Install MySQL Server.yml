- name: Install MySQL Server
  ansible.builtin.dnf:
    name: mysql-server
    state: latest

- name: Start and Enable MySQL Service
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: yes

- name: Print MySQL status
  ansible.builtin.command: systemctl status mysqld
  register: mysql_status
  changed_when: false

- name: Show MySQL Service Status
  ansible.builtin.debug:
    msg: "MySQL service is running: {{ mysql_status.stdout_lines | default([]) }}"

- name: Install Python MySQL dependencies
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.9

# --- Ensure root has no password and set it only if needed ---

- name: Check if MySQL root password is not set (via socket)
  community.mysql.mysql_info:
    login_user: root
    login_unix_socket: /var/lib/mysql/mysql.sock
    filter: version
  register: mysql_no_password_check
  ignore_errors: yes

- name: Set root password if not already set
  community.mysql.mysql_user:
    name: root
    host: "{{ mysql_login_host }}"
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/lib/mysql/mysql.sock
  when: mysql_no_password_check.failed | default(true)

# --- Validate login with credentials ---

- name: Check MySQL connection with root credentials
  community.mysql.mysql_info:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ mysql_login_host }}"
    filter: version
  register: mysql_connection_output
  ignore_errors: no

- name: Show MySQL Version
  ansible.builtin.debug:
    msg: "MySQL version: {{ mysql_connection_output.version.full }}"
